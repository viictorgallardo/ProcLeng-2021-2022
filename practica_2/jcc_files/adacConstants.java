/* Generated By:JavaCC: Do not edit this line. adacConstants.java */
package traductor;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface adacConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int tBEGIN = 6;
  /** RegularExpression Id. */
  int tBOOL = 7;
  /** RegularExpression Id. */
  int tCHAR = 8;
  /** RegularExpression Id. */
  int tINT = 9;
  /** RegularExpression Id. */
  int tIF = 10;
  /** RegularExpression Id. */
  int tELSE = 11;
  /** RegularExpression Id. */
  int tWHILE = 12;
  /** RegularExpression Id. */
  int tPROCEDURE = 13;
  /** RegularExpression Id. */
  int tFUNCTION = 14;
  /** RegularExpression Id. */
  int tIS = 15;
  /** RegularExpression Id. */
  int tRETURN = 16;
  /** RegularExpression Id. */
  int tDO = 17;
  /** RegularExpression Id. */
  int tEND = 18;
  /** RegularExpression Id. */
  int tTHEN = 19;
  /** RegularExpression Id. */
  int LETTER = 20;
  /** RegularExpression Id. */
  int DIGIT = 21;
  /** RegularExpression Id. */
  int tNUM = 22;
  /** RegularExpression Id. */
  int tCAD = 23;
  /** RegularExpression Id. */
  int tSUMA = 24;
  /** RegularExpression Id. */
  int tRESTA = 25;
  /** RegularExpression Id. */
  int tMUL = 26;
  /** RegularExpression Id. */
  int tDIV = 27;
  /** RegularExpression Id. */
  int tCOMA = 28;
  /** RegularExpression Id. */
  int tPCOMA = 29;
  /** RegularExpression Id. */
  int tMENOR = 30;
  /** RegularExpression Id. */
  int tMAYOR = 31;
  /** RegularExpression Id. */
  int tMENORI = 32;
  /** RegularExpression Id. */
  int tMAYORI = 33;
  /** RegularExpression Id. */
  int tIGUAL = 34;
  /** RegularExpression Id. */
  int tDISTINTO = 35;
  /** RegularExpression Id. */
  int tASIGNACION = 36;
  /** RegularExpression Id. */
  int tPOPEN = 37;
  /** RegularExpression Id. */
  int tPCLOSE = 38;
  /** RegularExpression Id. */
  int tCOPEN = 39;
  /** RegularExpression Id. */
  int tCCLOSE = 40;
  /** RegularExpression Id. */
  int tOR = 41;
  /** RegularExpression Id. */
  int tAND = 42;
  /** RegularExpression Id. */
  int tNOT = 43;
  /** RegularExpression Id. */
  int tFALSE = 44;
  /** RegularExpression Id. */
  int tTRUE = 45;
  /** RegularExpression Id. */
  int tREF = 46;
  /** RegularExpression Id. */
  int tVAL = 47;
  /** RegularExpression Id. */
  int tID = 48;
  /** RegularExpression Id. */
  int ERROR = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"begin\"",
    "\"boolean\"",
    "\"character\"",
    "\"integer\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"procedure\"",
    "\"function\"",
    "\"is\"",
    "\"return\"",
    "\"do\"",
    "\"end\"",
    "\"then\"",
    "<LETTER>",
    "<DIGIT>",
    "<tNUM>",
    "<tCAD>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\";\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
    "\"<>\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"or\"",
    "\"and\"",
    "\"not\"",
    "\"false\"",
    "\"true\"",
    "\"ref\"",
    "\"val\"",
    "<tID>",
    "<ERROR>",
  };

}
